version: '3.4'

networks:
  frontend:
  backend:

services:
  catalog:
    image: eventbrite/eventcatalogapi
    build:
      context: .\EventCatalogAPI
      dockerfile: Dockerfile
    environment:
      ExternalCatalogBaseUrl: http://localhost:6810
      DatabaseServer: mssqlserver
      DatabaseName: EventDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "6810:80"
    container_name: eventscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: events/webmvc
    build:
      context: .\WebMVC
      dockerfile: Dockerfile
    environment:
      CatalogUrl: http://catalog/
      CartUrl: http://cart
      IdentityUrl: http://192.168.0.12:6700
      CallBackUrl: http://localhost:6811
      OrderUrl: http://order
      StripePublicKey: pk_test_51HCDM0CIXwstmVzJXoeYGW4uTooy1i9L6sGazNQHq99NHniGvJbacW4fTu4hJrsscNzc0qdSgHw8iyFRSzmEzC3v00mAB2pWHb
      StripePrivateKey: sk_test_51HCDM0CIXwstmVzJGNKqSLkbIELfi1nqViSbDCeelDU5skfgK9t6YRDOwK8ZEMnzB0nXXW5SKhNQtKR1DMfCDE9t00tMxWFWEK
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "6811:80"
    networks:
      - frontend
    depends_on:
      - catalog
      - cart
      - tokenserver

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      MVCClient: http://localhost:6811
    ports:
      - "6700:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  cart:
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    image: events/cartapi
    environment:
      IdentityUrl: http://192.168.0.12:6700
      ConnectionString: basket.data
    ports:
      - "6812:80"
    container_name: cartapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokenserver
      - basket.data
      - rabbitmq

  order:
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    image: jewels/orderapi
    logging:
      driver: "json-file"
      options: {
        max-size: "200K",
        max-file: "10"
      }
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.0.12:6700
      DatabaseServer: mssqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "6813:80"
    container_name: orderapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      - rabbitmq

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1448:1433"
    container_name: eventssqlserver
    networks:
      - backend

  basket.data:
    image: redis
    container_name: basketdata
    ports:
      - "6080:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend 
